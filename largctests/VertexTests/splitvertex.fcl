#include "services_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "trackproducerfrompfparticle.fcl"
#include "vertexsplitter.fcl"

#include "tpcneutrinoidfilter_microboone.fcl"
#include "filters.fcl"

#include "reco_uboone_mcc8_driver_common.fcl"

process_name: VtxSplit

services: {
  TFileService:           { fileName: "dummyAnalysis-pf.root" }
  @table::microboone_reco_mcc8_services
  TimeTracker: { }
} # services
services.MemoryPeakReporter: @erase

source:
{
  module_type: RootInput
  firstEvent : 1
  maxEvents:  -1
}

source.inputCommands: [ "keep *_*_*_*", "drop *_opfiltercommon__McRecoStage1" ]

outputs:{
   out1: {
      compressionLevel: 1
      dataTier: "reconstructed"
      fastCloning: false
      fileName: "splitVertex.root"
      module_type: "RootOutput"
      saveMemoryObjectThreshold: 0
#      outputCommands: ["keep *"]
      outputCommands: ["drop *_*_*_*",
      		       "keep *_gaushit_*_*",
      		       "keep *_pandoraNu*_*_*",
      		       "keep *_*_*_VtxSplit"]
   }
}

splitvertexntuplizer: {
  module_type:  SplitVertexNtuplizer
  module_label: SplitVertexNtuplizer
  inputTracksLabel: "pandoraNuKalmanTrack"
  inputVertexLabel: "pandoraNuKTVertex"
  inputVertexLabel1st: "vertexsplitter:even"
  inputVertexLabel2nd: "vertexsplitter:odd"
}

physics: {
  producers: {
     pandoraNuKalmanTrack: { @table::microboone_reco_mcc8_producers.pandoraNuKalmanTrack }
     pandoraNuKTVertex: { @table::microboone_reco_mcc8_producers.pandoraNuKTVertex }
     vertexsplitter: @local::vertexsplitter
     NuMuCCSelectionII:      @local::microboone_tpcNeutrinoID
  }
  filters:  { tpcneutrinoidfilter : @local::microboone_tpcneutrinoidfilter }
  analyzers: { splitvertexntuplizer: @local::splitvertexntuplizer }

  filt: [ NuMuCCSelectionII, tpcneutrinoidfilter ]
  reco: [ pandoraNuKalmanTrack, pandoraNuKTVertex, vertexsplitter ]
  ana:  [ splitvertexntuplizer ]
  #stream1: [ out1 ]

  trigger_paths: [ filt, reco ]
  #end_paths: [ ana, stream1 ]
  end_paths: [ ana ]
  #end_paths: [ stream1 ]
} # physics

services.SpaceCharge.EnableCorrSCE: true
services.SpaceCharge.EnableSimEfieldSCE: true
services.SpaceCharge.EnableSimSpatialSCE: true
